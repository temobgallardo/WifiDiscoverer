<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="IsObservableCollBuggy.Pages.WifiPageStructure"
             xmlns:cells="clr-namespace:IsObservableCollBuggy.Pages.Cells"
             xmlns:viewmodels="clr-namespace:IsObservableCollBuggy.Models"
             xmlns:resx="clr-namespace:IsObservableCollBuggy.Resx"
             xmlns:elements="clr-namespace:IsObservableCollBuggy.Elements"
             xmlns:controls="clr-namespace:IsObservableCollBuggy.Controls"
             x:DataType="viewmodels:WifiConnection"
             x:Name="this">
    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="WifiCell">
                <cells:WifiCell />
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid CompressedLayout.IsHeadless="true"
              Padding="0,10,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="7*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <StackLayout CompressedLayout.IsHeadless="True"
                         Grid.Column="0"
                         Grid.Row="0">
                <Label Text="{x:Static resx:AppResource.DiagnosticPageWifiTabTitleText}"
                       Style="{StaticResource HeaderLabelLine2TextStyle}"
                       TextColor="Color.ForestGreen"
                       FontSize="25" />
                <Grid CompressedLayout.IsHeadless="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="90" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0"
                           Text="{Binding DeviceMacAddress, StringFormat='Device MAC address: {0}'}"
                           TextColor="{StaticResource Primary}"
                           FontSize="18"
                           FontFamily="{StaticResource GothamRndLightFontFamily}" />
                    <elements:CustomSwitch Grid.Column="1"
                                           IsToggledLocal="{Binding EnableWifiToggle}">
                        <elements:CustomSwitch.Triggers>
                            <Trigger TargetType="elements:CustomSwitch"
                                     Property="IsToggledLocal"
                                     Value="True">
                                <Setter Property="SwitchText"
                                        Value="On" />
                                <Setter Property="BackgroundColor"
                                        Value="{StaticResource Primary}" />
                                <Setter Property="TextColor"
                                        Value="{StaticResource SemiTransparentWhiteColor}" />
                            </Trigger>
                            <Trigger TargetType="elements:CustomSwitch"
                                     Property="IsToggledLocal"
                                     Value="False">
                                <Setter Property="SwitchText"
                                        Value="Off" />
                                <Setter Property="BackgroundColor"
                                        Value="{StaticResource SemiTransparentWhiteColor}" />
                                <Setter Property="TextColor"
                                        Value="Black" />
                            </Trigger>
                        </elements:CustomSwitch.Triggers>
                    </elements:CustomSwitch>
                </Grid>
                <BoxView Color="Gray"
                         HeightRequest="1" />
            </StackLayout>
            <ListView Grid.Column="0"
                      Grid.Row="1"
                      x:Name="NetworkListView"
                      ItemsSource="{Binding Wifis}"
                      SelectedItem="{Binding CurrentWifi}"
                      IsPullToRefreshEnabled="True"
                      IsRefreshing="{Binding IsRefreshing}"
                      RefreshCommand="{Binding RefreshCommand}"
                      IsVisible="{Binding NetworkListIsVisible}"
                      SeparatorColor="black"
                      RowHeight="64"
                      Margin="8">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <cells:WifiCell />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackLayout CompressedLayout.IsHeadless="True"
                         Grid.Column="0"
                         Grid.Row="1"
                         x:Name="ConnectNetwork"
                         x:DataType="viewmodels:WifiConnection"
                         IsVisible="{Binding ConnectNetworkIsVisible, Mode=OneWay}">
                <Label x:Name="WifiName"
                       Text="{Binding CurrentWifi.Ssid}" />
                <Label x:Name="MacAddress"
                       Text="{Binding CurrentWifi.Bssid}" />
                <controls:EntryWithCustomKeyboard x:Name="Password"
                                                  Placeholder="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiPasswordPlaceholder}"
                                                  Text="{Binding CurrentWifi.Password}"
                                                  IsPassword="True" />
                <StackLayout CompressedLayout.IsHeadless="True"
                             Orientation="Horizontal">
                    <Button x:Name="ConnectButtom"
                            Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiConnect}"
                            Command="{Binding BindingContext.ConnectCommand, Source={x:Reference this}}" />
                    <Button x:Name="CancelButtom"
                            Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiCancel}"
                            Command="{Binding BindingContext.CancelCommand, Source={x:Reference this}}" />
                </StackLayout>
            </StackLayout>
            <StackLayout CompressedLayout.IsHeadless="True"
                         Grid.Column="0"
                         Grid.Row="1"
                         x:Name="AddHiddenNetwork"
                         x:DataType="viewmodels:WifiConnection"
                         IsVisible="{Binding AddHiddenNetworkIsVisible, Mode=OneWay}">
                <Label Text="{Static resx:AppResource.DiagnosticPageWifiTabConnectHiddenNetwork}"
                       TextColor="Black" />
                <controls:EntryWithCustomKeyboard x:Name="HiddenNetworkSsid"
                                                  Placeholder="Ssid/Wifi name"
                                                  Text="{Binding HiddenNetwork.Ssid}" />
                <controls:EntryWithCustomKeyboard x:Name="NewWifiPassword"
                                                  Placeholder="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiPasswordPlaceholder}"
                                                  Text="{Binding HiddenNetwork.Password}" />
                <StackLayout CompressedLayout.IsHeadless="True"
                             Orientation="Horizontal">
                    <Button x:Name="ConnectHiddenNetworkButtom"
                            Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiConnect}"
                            Command="{Binding BindingContext.AddNetworkCommand, Source={x:Reference this}}  " />
                    <Button x:Name="ConnectoHiddenNetworkCancelButtom"
                            Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiCancel}"
                            Command="{Binding BindingContext.CancelCommand, Source={x:Reference this}}" />
                </StackLayout>
            </StackLayout>
            <StackLayout CompressedLayout.IsHeadless="True"
                         Orientation="Horizontal"
                         Grid.Column="0"
                         Grid.Row="2">
                <Button BackgroundColor="Purple"
                        Command="{Binding AddHiddenNetworkCommand}"
                        Text="{Static resx:AppResource.DiagnosticPageWifiTabConnectHiddenNetwork}"
                        TextColor="White">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding EnableWifiToggle}"
                                     Value="False">
                            <Setter Property="TextColor"
                                    Value="LightGray" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button BackgroundColor="Purple"
                        Command="{Binding RefreshCommand}"
                        Text="{Static resx:AppResource.DiagnosticPageWifiTabRefreshList}"
                        TextColor="White">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding EnableWifiToggle}"
                                     Value="False">
                            <Setter Property="TextColor"
                                    Value="LightGray" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button BackgroundColor="Purple"
                        Command="{Binding DisconnectCommand}"
                        Text="{Static resx:AppResource.DiagnosticPageWifiTabDisconnect}"
                        TextColor="White">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding EnableWifiToggle}"
                                     Value="False">
                            <Setter Property="TextColor"
                                    Value="LightGray" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>