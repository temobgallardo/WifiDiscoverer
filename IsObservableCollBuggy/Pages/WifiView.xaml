<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="IsObservableCollBuggy.Pages.WifiView"
             xmlns:cells="clr-namespace:IsObservableCollBuggy.Pages.Cells"
             xmlns:viewmodels="clr-namespace:IsObservableCollBuggy.Models"
             xmlns:effects="clr-namespace:IsObservableCollBuggy.Effects"
             xmlns:resx="clr-namespace:IsObservableCollBuggy.Resx"
             xmlns:elements="clr-namespace:IsObservableCollBuggy.Elements"
             xmlns:controls="clr-namespace:IsObservableCollBuggy.Controls"
             x:DataType="viewmodels:WifiConnection"
             x:Name="this">
    <!--xmlns:xct="http://xamarin.com/schemas/2020/toolkit"-->

    <ContentView.Effects>
        <effects:LifecycleEffect Loaded="ViewLifecycleEffect_OnLoaded"
                                 Unloaded="ViewLifecycleEffect_OnUnloaded" />
        <!--<xct:LifecycleEffect Loaded="ViewLifecycleEffect_OnLoaded"
                             Unloaded="ViewLifecycleEffect_OnUnloaded" />-->
    </ContentView.Effects>

    <ContentView.Content>
        <Grid CompressedLayout.IsHeadless="true"
              Padding="0,10,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="7*" />
                <RowDefinition Height="70" />
            </Grid.RowDefinitions>
            <StackLayout CompressedLayout.IsHeadless="True"
                         Grid.Column="0"
                         Grid.Row="0">
                <Grid CompressedLayout.IsHeadless="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0"
                           Text="{x:Static resx:AppResource.DiagnosticPageWifiTabTitleText}"
                           TextColor="#6D6E70"
                           FontSize="{StaticResource ButtonFontSize}"
                           FontFamily="{StaticResource GothamRndMediumFontFamily}" />
                    <elements:CustomSwitch Grid.Column="1"
                                           IsToggledLocal="{Binding EnableWifiToggle}">
                        <elements:CustomSwitch.Triggers>
                            <Trigger TargetType="elements:CustomSwitch"
                                     Property="IsToggledLocal"
                                     Value="True">
                                <Setter Property="SwitchText"
                                        Value="ON" />
                                <Setter Property="BackgroundColor"
                                        Value="#A0D7A4" />
                                <Setter Property="TextColor"
                                        Value="#40AE49" />
                                <Setter Property="BorderColor"
                                        Value="#40AE49" />
                            </Trigger>
                            <Trigger TargetType="elements:CustomSwitch"
                                     Property="IsToggledLocal"
                                     Value="False">
                                <Setter Property="SwitchText"
                                        Value="OFF" />
                                <Setter Property="BackgroundColor"
                                        Value="#EEB491" />
                                <Setter Property="TextColor"
                                        Value="#DC6922" />
                                <Setter Property="BorderColor"
                                        Value="#DC6922" />
                            </Trigger>
                        </elements:CustomSwitch.Triggers>
                    </elements:CustomSwitch>
                </Grid>
                <Label Grid.Column="0"
                       Text="{Binding DeviceMacAddress, StringFormat={x:Static resx:AppResource.DiagnosticPageWifiTabMacPlaceholder}}"
                       TextColor="#6D6E70"
                       FontSize="{StaticResource ButtonFontSize}"
                       FontFamily="{StaticResource GothamRndMediumFontFamily}" />
                <BoxView Color="#B6B7B8"
                         HeightRequest="1" />
            </StackLayout>
            <ListView Grid.Column="0"
                      Grid.Row="1"
                      x:Name="NetworkListView"
                      ItemsSource="{Binding Wifis}"
                      SelectedItem="{Binding CurrentWifi}"
                      ItemTapped="NetworkListView_ItemTapped"
                      IsPullToRefreshEnabled="True"
                      IsRefreshing="{Binding IsRefreshing}"
                      RefreshCommand="{Binding RefreshCommand}"
                      IsVisible="{Binding NetworkListIsVisible}"
                      SeparatorColor="black"
                      RowHeight="40"
                      Margin="8"
                      ItemTemplate="{x:DataTemplate cells:WifiCell}" />
            <StackLayout Grid.Column="0"
                         Grid.Row="1"
                         x:Name="ConnectNetwork"
                         x:DataType="viewmodels:WifiConnection"
                         IsVisible="{Binding ConnectNetworkIsVisible, Mode=OneWay}">
                <Label x:Name="WifiName"
                       Text="{Binding CurrentWifi.Ssid}"
                       FontSize="{StaticResource ButtonFontSize}"
                       FontFamily="{StaticResource GothamRndMediumFontFamily}" />
                <Label x:Name="MacAddress"
                       Text="{Binding CurrentWifi.Bssid}"
                       FontSize="{StaticResource ButtonFontSize}"
                       FontFamily="{StaticResource GothamRndMediumFontFamily}" />
                <controls:EntryWithCustomKeyboard x:Name="Password"
                                                  Placeholder="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiPasswordPlaceholder}"
                                                  Text="{Binding CurrentWifi.Password}"
                                                  IsPassword="True" />
                <StackLayout CompressedLayout.IsHeadless="True"
                             Orientation="Horizontal">
                    <controls:XenexButton x:Name="ConnectButtom"
                                          Style="{StaticResource ActiveButton}"
                                          Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiConnect}"
                                          Command="{Binding BindingContext.ConnectCommand, Source={x:Reference this}}"/>
                    <controls:XenexButton x:Name="CancelButtom"
                                          Style="{StaticResource ActiveButton}"
                                          Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiCancel}"
                                          Command="{Binding BindingContext.CancelCommand, Source={x:Reference this}}"/>
                </StackLayout>
            </StackLayout>
            <StackLayout Grid.Column="0"
                         Grid.Row="1"
                         x:Name="AddHiddenNetwork"
                         x:DataType="viewmodels:WifiConnection"
                         IsVisible="{Binding AddHiddenNetworkIsVisible, Mode=OneWay}">
                <Label Text="{Static resx:AppResource.DiagnosticPageWifiTabConnectHiddenNetwork}"
                       TextColor="Black"
                       FontSize="{StaticResource ButtonFontSize}"
                       FontFamily="{StaticResource GothamRndMediumFontFamily}" />
                <controls:EntryWithCustomKeyboard x:Name="HiddenNetworkSsid"
                                                  Placeholder="{x:Static resx:AppResource.DiagnosticPageWifiTabSsidPlaceholder}"
                                                  Text="{Binding HiddenNetwork.Ssid}" />
                <controls:EntryWithCustomKeyboard x:Name="NewWifiPassword"
                                                  Placeholder="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiPasswordPlaceholder}"
                                                  Text="{Binding HiddenNetwork.Password}" />
                <StackLayout CompressedLayout.IsHeadless="True"
                             Orientation="Horizontal">
                    <controls:XenexButton x:Name="ConnectHiddenNetworkButtom"
                                          Style="{StaticResource ActiveButton}"
                                          Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiConnect}"
                                          Command="{Binding BindingContext.AddNetworkCommand, Source={x:Reference this}}" />
                    <controls:XenexButton x:Name="ConnectoHiddenNetworkCancelButtom"
                                          Style="{StaticResource ActiveButton}"
                                          Text="{x:Static resx:AppResource.DiagnosticPageWifiTabWifiCancel}"
                                          Command="{Binding BindingContext.CancelCommand, Source={x:Reference this}}" />
                </StackLayout>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         Grid.Column="0"
                         Grid.Row="2"
                         x:DataType="viewmodels:WifiConnection"
                         IsVisible="{Binding FooterButtonsVisible, Mode=OneWay}">
                <controls:XenexButton x:Name="AddNetworkButton"
                                      Style="{StaticResource ActiveButton}"
                                      Command="{Binding AddHiddenNetworkCommand}"
                                      Text="{Static resx:AppResource.DiagnosticPageWifiTabConnectHiddenNetwork}"
                                      effects:Gradient.IsEnable="{Binding EnableWifiToggle}"/>
                <!--<Button.Triggers>
                        <DataTrigger TargetType="Button"
                                     Binding="{Binding IsLanguageConfirmEnabled}"
                                     Value="false">
                            <Setter Property="BackgroundColor"
                                    Value="#F3F2F1" />
                        </DataTrigger>
                    </Button.Triggers>-->
                <!--<Button.Effects>
                        <effects:GradientBackgroundColorEffect>
                            <effects:GradientBackgroundColorEffect.GradientColors>
                                <OnPlatform x:TypeArguments="effects:GradientColors">
                                    <On Platform="Android"
                                        Value="#1285A5, #7FC8C4" />
                                </OnPlatform>
                            </effects:GradientBackgroundColorEffect.GradientColors>
                        </effects:GradientBackgroundColorEffect>
                    </Button.Effects>-->
                <controls:XenexButton x:Name="RefreshButton"
                                      Style="{StaticResource ActiveButton}"
                                      Command="{Binding RefreshCommand}"
                                      Text="{Static resx:AppResource.DiagnosticPageWifiTabRefreshList}"
                                      effects:Gradient.IsEnable="{Binding EnableWifiToggle}"/>
                <controls:XenexButton x:Name="DisconnectButton"
                                      Style="{StaticResource ActiveButton}"
                                      Command="{Binding DisconnectCommand}"
                                      Text="{Static resx:AppResource.DiagnosticPageWifiTabDisconnect}"
                                      effects:Gradient.IsEnable="{Binding EnableWifiToggle}"/>
                <Button x:Name="RemoveNetworkCommand"
                                      Style="{StaticResource ActiveButton2}"
                                      Command="{Binding RemoveNetworkCommand}"
                                      Text="{Static resx:AppResource.DiagnosticPageWifiTabRemoveNetwork}"
                                      effects:Gradient.IsEnable="{Binding EnableWifiToggle}" />
            </StackLayout>
        </Grid>
    </ContentView.Content>
</ContentView>